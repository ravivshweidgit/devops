Please create details student guide MD format  for the bellow example lesson:

this lesson is documenting https://learn.kodekloud.com/ labs

Terra form AWS kodekloud DynamoDB
===============================

1 / 10
In this lab, we will work with DynamoDB tables using terraform.
The configuration directories have been created under /root/terraform-projects/DynamoDB.

2 / 10
We have already created a resource block for a DynamoDB table inside /root/terraform-projects/DynamoDB/project-sapphire-user-data/.
But something is wrong with this configuration. Try running a terraform plan or validate and identify the cause of the failure.

resource "aws_dynamodb_table" "project_sapphire_user_data" {
  name           = "userdata"
  billing_mode   = "PAY_PER_REQUEST"
  hash_key       = "UserId"

  attribute {
    name = "Name"
    type = "S"
  }
}

❯ terraform plan

Planning failed. Terraform encountered an error while generating this plan.

╷
│ Error: 2 errors occurred:
│       * all attributes must be indexed. Unused attributes: ["Name"]
│       * all indexes must match a defined attribute. Unmatched indexes: ["UserId"]
│ 
│ 
│ 
│   with aws_dynamodb_table.project_sapphire_user_data,
│   on main.tf line 1, in resource "aws_dynamodb_table" "project_sapphire_user_data":
│    1: resource "aws_dynamodb_table" "project_sapphire_user_data" {

Answer attribute for primary Key is missing

  attribute {
    name = "UserId"  <=== fix here to UserId column,  hash_key       = "UserId" means this is the PK column
    type = "S"
  }

3 / 10
That's right! At a minimum, the Primary Key should be defined as an attribute when creating a DynamoDB table.
In this configuration, we should add the attribute for UserId for it to work.

OK


4 / 10
Let's fix that now! Update the main.tf file so that it uses an attribute for the Primary/Hash Key.
Note that the UserId should be a number.

Once ready, run a terraform init, plan and apply.
  attribute {
    name = "UserId"  <=== fix here to UserId column,  hash_key       = "UserId" means this is the PK column
    type = "N"
  }

apply log :
aws_dynamodb_table.project_sapphire_user_data: Creating...
aws_dynamodb_table.project_sapphire_user_data: Creation complete after 9s [id=userdata]

Apply complete! Resources: 1 added, 0 changed, 0 destroyed.


5 / 10
Another table has been created using the configuration in the directory /root/terraform-projects/DynamoDB/project-sapphire-inventory.
Navigate to this directory and inspect the configuration.

OK

6 / 10
What is the name of the DynamoDB table resource that is created by this configuration?
resource "aws_dynamodb_table" "project_sapphire_inventory" {
  name           = "inventory"
  billing_mode   = "PAY_PER_REQUEST"
  hash_key       = "AssetID"

  attribute {
    name = "AssetID"
    type = "N"
  }
  attribute {
    name = "AssetName"
    type = "S"
  }
  attribute {
    name = "age"
    type = "N"
  }
  attribute {
    name = "Hardware"
    type = "B"
  }
  global_secondary_index {
    name             = "AssetName"
    hash_key         = "AssetName"
    projection_type    = "ALL"
    
  }
  global_secondary_index {
    name             = "age"
    hash_key         = "age"
    projection_type    = "ALL"
    
  }
  global_secondary_index {
    name             = "Hardware"
    hash_key         = "Hardware"
    projection_type    = "ALL"
    
  }
}

answer : project_sapphire_inventory


7 / 10
What is the name of the DynamoDB Table that is created this configuration?

answer : inventory

8 / 10
How many attributes are defined in this table currently?

answer : 4

9 / 10
What is the name and type of the Primary Key used by this table?

answer : AssetID, Number


10 / 10
Now, let's add an item to this table called inventory. Use the following specifications and update the main.tf file:
Resource Name: upload
Table = Use reference expression to the table called inventory
Hash Key = Use reference expression to use the primary key used by the table inventory

Use the below data for item:
{
"AssetID": {"N": "1"},
"AssetName": {"S": "printer"},
"age": {"N": "5"},
"Hardware": {"B": "true" }
}

resource "aws_dynamodb_table_item" "upload" {
  table_name = aws_dynamodb_table.project_sapphire_inventory.name
  hash_key   = aws_dynamodb_table.project_sapphire_inventory.hash_key
 
  item = jsonencode({
    AssetID = {
      N = "1"
    }
    AssetName = {
      S = "printer"
    }
    age = {
      N = "5"
    }
    Hardware = {
      B = "true"
    }
  })
}

apply log:
aws_dynamodb_table_item.upload: Creating...
aws_dynamodb_table_item.upload: Creation complete after 0s [id=inventory|AssetID|||1]

Apply complete! Resources: 1 added, 0 changed, 0 destroyed.

