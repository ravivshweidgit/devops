Please create details student guide MD format  for the bellow example lesson:

this lesson is about ArgoCD

minikube start


let create name scpace argo cd

ravivm@ravivm-N501VW:~/projects/devops/2025-09-21-ArgoDC$ kubectl create ns argocd
namespace/argocd created


kubectl apply -n argocd -f https://raw.githubusercontent.com/argoproj/argo-cd/stable/manifests/install.yaml


ravivm@ravivm-N501VW:~/projects/devops/2025-09-21-ArgoDC$ kubectl get po -n argocd
NAME                                                READY   STATUS    RESTARTS      AGE
argocd-application-controller-0                     1/1     Running   0             73s
argocd-applicationset-controller-54f96997f8-g8bsn   1/1     Running   0             74s
argocd-dex-server-798cbff4c7-ngp9n                  1/1     Running   1 (37s ago)   74s
argocd-notifications-controller-644f66f7df-hlg6z    1/1     Running   0             74s
argocd-redis-6684c6947f-gj4lc                       1/1     Running   0             74s
argocd-repo-server-6fccc5759b-zhgrg                 1/1     Running   0             74s
argocd-server-64d5fcbd58-4l5lh                      1/1     Running   0             74s


ravivm@ravivm-N501VW:~/projects/devops/2025-09-21-ArgoDC$ kubectl get svc -n argocd
NAME                                      TYPE        CLUSTER-IP       EXTERNAL-IP   PORT(S)                      AGE
argocd-applicationset-controller          ClusterIP   10.103.55.225    <none>        7000/TCP,8080/TCP            2m22s
argocd-dex-server                         ClusterIP   10.102.64.189    <none>        5556/TCP,5557/TCP,5558/TCP   2m22s
argocd-metrics                            ClusterIP   10.110.212.115   <none>        8082/TCP                     2m22s
argocd-notifications-controller-metrics   ClusterIP   10.99.48.57      <none>        9001/TCP                     2m22s
argocd-redis                              ClusterIP   10.98.195.235    <none>        6379/TCP                     2m22s
argocd-repo-server                        ClusterIP   10.107.188.129   <none>        8081/TCP,8084/TCP            2m22s
argocd-server                             ClusterIP   10.110.13.100    <none>        80/TCP,443/TCP               2m22s
argocd-server-metrics                     ClusterIP   10.101.141.158   <none>        8083/TCP                     2m22s


lets try to enter argocd UI

ravivm@ravivm-N501VW:~/projects/devops/2025-09-21-ArgoDC$ kubectl -n argocd get secret argocd-initial-admin-secret -o yaml

ravivm@ravivm-N501VW:~/projects/devops/2025-09-28-ArgoDC$ kubectl -n argocd get secret argocd-initial-admin-secret -o yaml
apiVersion: v1
data:
  password: TzZjM3dZeDNBc0prVVdKeQ==
kind: Secret
metadata:
  creationTimestamp: "2025-09-28T17:37:02Z"
  name: argocd-initial-admin-secret
  namespace: argocd
  resourceVersion: "738"
  uid: 0c22579d-a159-48af-9639-c7abcb3ea95a
type: Opaque
ravivm@ravivm-N501VW:~/projects/devops/2025-09-28-ArgoDC$ echo "TzZjM3dZeDNBc0prVVdKeQ==" | base64 -d

O6c3wYx3AsJkUWJy


ravivm@ravivm-N501VW:~/projects/devops/2025-09-28-ArgoDC$ 


kubectl -n argocd port-forward svc/argocd-server 8080:443

https://localhost:8080/applications
user admin
password : O6c3wYx3AsJkUWJy


create private repository
https://github.com/ravivshweidgit/argocd-example-apps
from 
https://github.com/argoproj/argocd-example-apps


create in the new repository 
new file : my-argocd-proj.yaml
the content of the file is from :
https://argo-cd.readthedocs.io/en/stable/operator-manual/declarative-setup/#projects

we have changed this :
namespace: argocd

apiVersion: argoproj.io/v1alpha1
kind: AppProject
metadata:
  name: my-project
  namespace: argocd
  # Finalizer that ensures that project is not deleted until it is not referenced by any application
  finalizers:
    - resources-finalizer.argocd.argoproj.io
spec:
  description: Example Project
  # Allow manifests to deploy from any Git repos
  sourceRepos:
  - '*'
  # Only permit applications to deploy to the guestbook namespace in the same cluster
  destinations:
  - namespace: argocd
    server: https://kubernetes.default.svc
  # Deny all cluster-scoped resources from being created, except for Namespace
  clusterResourceWhitelist:
  - group: '*'
    kind: '*'


ravivm@ravivm-N501VW:~/projects/argocd-example-apps$ kubectl apply -f my-argocd-proj.yaml 
Warning: metadata.finalizers: "resources-finalizer.argocd.argoproj.io": prefer a domain-qualified finalizer name including a path (/) to avoid accidental conflicts with other finalizer writers
appproject.argoproj.io/my-project created


now we create ssh.yaml :

apiVersion: v1
kind: Secret
metadata:
  name: private-repo
  namespace: argocd
  labels:
    argocd.argoproj.io/secret-type: repository
stringData:
  type: git
  url: Z2l0QGdpdGh1Yi5jb206cmF2aXZzaHdlaWRnaXQvYXJnb2NkLWV4YW1wbGUtYXBwcy5naXQK
  sshPrivateKey: |
      private key here



    ravivm@ravivm-N501VW:~/projects/argocd-example-apps$ kubectl apply -f ssh.yaml 
secret/private-repo created


ravivm@ravivm-N501VW:~/projects/argocd-example-apps$ kubectl apply -f application.yaml 
application.argoproj.io/guestbook created


=======================================================================================

cat $HOME/.kube/config


kubectl config view

kubectl config use-context

=======================================================================================



application yaml edit and add :

  syncPolicy:
    automated: {}

    kubectl apply -f application.yaml


helm-guestbook/values.yaml edit port from 08 to 8080
service:
  type: ClusterIP
  port: 8080

commit and push change
LAST SYNC 
 Sync OK
to cb9bf42 
Succeeded 5 minutes ago (Sun Oct 05 2025 20:55:19 GMT+0300)
Author:
Raviv Shweid <raviv.shweid.git@gmail.com> -
Comment:
port: 8080


guestbook-helm-guestbook                  ClusterIP   10.107.135.101   <none>        8080/TCP                     5d21h


prune 

helm-guestbook/values.yaml edit remove the service
#service:
#  type: ClusterIP
#  port: 8080


application yaml edit and add :
  syncPolicy:
    automated:
      prune: true


ravivm@ravivm-N501VW:~/projects/argocd-example-apps$ kubectl apply -f application.yaml 
application.argoproj.io/guestbook configured


replicaCount: 0

avivm@ravivm-N501VW:~/projects/argocd-example-apps$ kubectl get rs -n argocd
NAME                                          DESIRED   CURRENT   READY   AGE
argocd-applicationset-controller-578697b885   1         1         1       144m
argocd-applicationset-controller-6d87c9f7b    0         0         0       7d
argocd-dex-server-69ccc5b979                  0         0         0       7d
argocd-dex-server-95477cdd                    1         1         1       144m
argocd-notifications-controller-545bddc587    0         0         0       7d
argocd-notifications-controller-787447c77d    1         1         1       144m
argocd-redis-5746c4c5fb                       1         1         1       144m
argocd-redis-7fb68457d5                       0         0         0       7d
argocd-repo-server-5694cbd45                  1         1         1       136m
argocd-repo-server-6474bb4d85                 0         0         0       5d22h
argocd-repo-server-6bbbd68997                 0         0         0       144m
argocd-repo-server-6dcd5dccdd                 0         0         0       7d
argocd-repo-server-7d4f449c7c                 0         0         0       5d22h
argocd-server-656b9b6c6c                      1         1         1       144m
argocd-server-7fc5bf6f76                      0         0         0       7d
guestbook-helm-guestbook-6585c766d6           1         1         1       5d22h
ravivm@ravivm-N501VW:~/projects/argocd-example-apps$ git push
Enumerating objects: 7, done.
Counting objects: 100% (7/7), done.
Delta compression using up to 8 threads
Compressing objects: 100% (4/4), done.
Writing objects: 100% (4/4), 388 bytes | 388.00 KiB/s, done.
Total 4 (delta 3), reused 0 (delta 0), pack-reused 0
remote: Resolving deltas: 100% (3/3), completed with 3 local objects.
To github.com:ravivshweidgit/argocd-example-apps.git
   39c2f5c..86e29f9  main -> main
ravivm@ravivm-N501VW:~/projects/argocd-example-apps$ date
Sun Oct  5 09:28:07 PM IDT 2025





ravivm@ravivm-N501VW:~/projects/argocd-example-apps$ kubectl get rs -n argocd
ravivm@ravivm-N501VW:~/projects/argocd-example-apps$ kubectl get rs -n argocd
NAME                                          DESIRED   CURRENT   READY   AGE
argocd-applicationset-controller-578697b885   1         1         1       150m
argocd-applicationset-controller-6d87c9f7b    0         0         0       7d
argocd-dex-server-69ccc5b979                  0         0         0       7d
argocd-dex-server-95477cdd                    1         1         1       150m
argocd-notifications-controller-545bddc587    0         0         0       7d
argocd-notifications-controller-787447c77d    1         1         1       150m
argocd-redis-5746c4c5fb                       1         1         1       150m
argocd-redis-7fb68457d5                       0         0         0       7d
argocd-repo-server-5694cbd45                  1         1         1       143m
argocd-repo-server-6474bb4d85                 0         0         0       5d22h
argocd-repo-server-6bbbd68997                 0         0         0       150m
argocd-repo-server-6dcd5dccdd                 0         0         0       7d
argocd-repo-server-7d4f449c7c                 0         0         0       5d22h
argocd-server-656b9b6c6c                      1         1         1       150m
argocd-server-7fc5bf6f76                      0         0         0       7d
guestbook-helm-guestbook-6585c766d6           0         0         0       5d22h

now replica is down from 1 to zero



self healing :


  syncPolicy:
    automated:
      prune: true
      selfHeal: true


ravivm@ravivm-N501VW:~/projects/argocd-example-apps$ kubectl scale deployment guestbook-helm-guestbook  --replicas=5 -n argocd
deployment.apps/guestbook-helm-guestbook scaled

ravivm@ravivm-N501VW:~/projects/argocd-example-apps$ kubectl get deploy -n argocd
NAME                               READY   UP-TO-DATE   AVAILABLE   AGE
argocd-applicationset-controller   1/1     1            1           7d1h
argocd-dex-server                  1/1     1            1           7d1h
argocd-notifications-controller    1/1     1            1           7d1h
argocd-redis                       1/1     1            1           7d1h
argocd-repo-server                 1/1     1            1           7d1h
argocd-server                      1/1     1            1           7d1h
guestbook-helm-guestbook           5/5     5            5           5d22h


guestbook-helm-guestbook           5/5     5            5           5d22h
ravivm@ravivm-N501VW:~/projects/argocd-example-apps$ kubectl apply -f application.yaml 
application.argoproj.io/guestbook configured

ravivm@ravivm-N501VW:~/projects/argocd-example-apps$ date
Sun Oct  5 09:52:37 PM IDT 2025


ravivm@ravivm-N501VW:~/projects/argocd-example-apps$ kubectl get deploy -n argocd
NAME                               READY   UP-TO-DATE   AVAILABLE   AGE
argocd-applicationset-controller   1/1     1            1           7d1h
argocd-dex-server                  1/1     1            1           7d1h
argocd-notifications-controller    1/1     1            1           7d1h
argocd-redis                       1/1     1            1           7d1h
argocd-repo-server                 1/1     1            1           7d1h
argocd-server                      1/1     1            1           7d1h
guestbook-helm-guestbook           0/0     0            0           5d22h

back to zero 


revert : 

targetRevision: 3938f17f5e713020ed1ecc9381f0e75125426637   was HEAD

ravivm@ravivm-N501VW:~/projects/argocd-example-apps$ kubectl apply -f application.yaml 
application.argoproj.io/guestbook configured

ravivm@ravivm-N501VW:~/projects/argocd-example-apps$ kubectl get svc -n srgocd
No resources found in srgocd namespace.
ravivm@ravivm-N501VW:~/projects/argocd-example-apps$ kubectl get svc -n argocd
NAME                                      TYPE        CLUSTER-IP       EXTERNAL-IP   PORT(S)                      AGE
argocd-applicationset-controller          ClusterIP   10.102.4.110     <none>        7000/TCP,8080/TCP            7d1h
argocd-dex-server                         ClusterIP   10.108.195.131   <none>        5556/TCP,5557/TCP,5558/TCP   7d1h
argocd-metrics                            ClusterIP   10.111.0.108     <none>        8082/TCP                     7d1h
argocd-notifications-controller-metrics   ClusterIP   10.107.200.190   <none>        9001/TCP                     7d1h
argocd-redis                              ClusterIP   10.100.93.128    <none>        6379/TCP                     7d1h
argocd-repo-server                        ClusterIP   10.107.8.152     <none>        8081/TCP,8084/TCP            7d1h
argocd-server                             ClusterIP   10.100.66.17     <none>        80/TCP,443/TCP               7d1h
argocd-server-metrics                     ClusterIP   10.102.95.240    <none>        8083/TCP                     7d1h
guestbook-helm-guestbook                  ClusterIP   10.107.135.101   <none>        80/TCP                       5d22h


sync-waves



pplication-sync-waves.yaml 

apiVersion: argoproj.io/v1alpha1
kind: Application
metadata:
  name: sync-waves
  namespace: argocd
spec:
  project: my-project
  source:
    repoURL:  git@github.com:ravivshweidgit/argocd-example-apps.git
    targetRevision: HEAD
    path: sync-waves
  destination:
    server: https://kubernetes.default.svc
    namespace: argocd

  syncPolicy:
    automated:
      prune: true
      selfHeal: true




ravivm@ravivm-N501VW:~/projects/argocd-example-apps$ kubectl apply -f application-sync-waves.yaml 


sync-waves/manifest.yaml

---
apiVersion: batch/v1
kind: Job
metadata:
  generateName: upgrade-sql-schema
  annotations:
    argocd.argoproj.io/hook: PreSync
spec:
  template:
    spec:
      containers:
        - name: upgrade-sql-schema
          image: alpine:latest
          command: ["sleep", "5"]
      restartPolicy: Never
---
apiVersion: apps/v1
kind: ReplicaSet
metadata:
  name: backend
spec:
  replicas: 1
  selector:
    matchLabels:
      tier: backend
  template:
    metadata:
      labels:
        tier: backend
    spec:
      containers:
        - name: main
          image: nginx:latest
---
apiVersion: v1
kind: Service
metadata:
  name: backend
spec:
  selector:
    tier: backend
  ports:
    - protocol: TCP
      port: 8080
      targetPort: 8080
---
apiVersion: batch/v1
kind: Job
metadata:
  name: maint-page-up
  annotations:
    argocd.argoproj.io/hook: Sync
    argocd.argoproj.io/hook-delete-policy: BeforeHookCreation
    argocd.argoproj.io/sync-wave: "1"
spec:
  template:
    spec:
      containers:
        - name: page-up
          image: alpine:latest
          command: ["sleep", "2"]
      restartPolicy: Never
  backoffLimit: 0
---
apiVersion: apps/v1
kind: ReplicaSet
metadata:
  name: frontend
  annotations:
    argocd.argoproj.io/sync-wave: "2"
spec:
  replicas: 1
  selector:
    matchLabels:
      tier: frontend
  template:
    metadata:
      labels:
        tier: frontend
    spec:
      containers:
        - name: main
          image: nginx:latest
---
apiVersion: v1
kind: Service
metadata:
  name: frontend
  annotations:
    argocd.argoproj.io/sync-wave: "2"
spec:
  selector:
    tier: frontend
  ports:
    - protocol: TCP
      port: 80
      targetPort: 80
---
apiVersion: batch/v1
kind: Job
metadata:
  name: maint-page-down
  annotations:
    argocd.argoproj.io/hook: Sync
    argocd.argoproj.io/hook-delete-policy: BeforeHookCreation
    argocd.argoproj.io/sync-wave: "3"
spec:
  template:
    spec:
      containers:
        - name: page-down
          image: alpine:latest
          command: ["sleep", "2"]
      restartPolicy: Never





